<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="help">
    <PropertyGroup>
        <Version>1.4.8.0</Version>

        <nugetSource>http://localhost:5000/</nugetSource>
        <nugetPushKey></nugetPushKey>
    </PropertyGroup>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ~ 
    ~ help/
    ~ 
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <Target Name="help">
        <Message Text="Platinum, Available targets:" />
        <Message Text="* clean     Ensures a clean slate by removing all previous output." />
        <Message Text="* build     Compiles a 'Release' build of the solution and NuGet packages." />
        <Message Text="* push      Publishes NuGet packages onto a directory." />
        <Message Text="* build-vs  Compiles the Visual Studio plugin." />
    </Target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ~ 
    ~ clean/
    ~ 
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <Target Name="clean">
        <MSBuild Projects="Platinum.sln" Properties="Configuration=Debug"  Targets="Clean" />
        <MSBuild Projects="Platinum.sln" Properties="Configuration=Release" Targets="Clean" />
    </Target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ~ 
    ~ deps/
    ~ 
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <Target Name="deps">
        <Exec Command=" nuget restore Platinum.sln " />
        <Exec Command=" bin\ptvscmd.exe --solution=Platinum.sln " />
    </Target>
    
    
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ~ 
    ~ _version/
    ~ Emits version information to global file, which is used by all
    ~ projects.
    ~ 
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <Target Name="_version">
        <PropertyGroup>
            <versionInfo>[assembly: System.Reflection.AssemblyVersion( "$(Version)" )]</versionInfo>
        </PropertyGroup>

        <WriteLinesToFile Overwrite="true" File="src\GlobalVersion.cs" Lines="$(versionInfo)" />
    </Target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ~ 
    ~ build/
    ~ Compile and produce the nuget packages.
    ~ 
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <Target Name="build" DependsOnTargets="deps;_version">
        <PropertyGroup>
            <nugetArgs> -OutputDirectory ..\..\build -IncludeReferencedProjects -Prop Configuration=Release </nugetArgs>
        </PropertyGroup>

        <!-- Compile -->
        <MSBuild Projects="Platinum.sln" Properties="Configuration=Release" />

        <!-- Specific versioning -->
        <Copy SourceFiles="src\Platinum.Schema\Platinum.Schema.nuspecx" DestinationFiles="src\Platinum.Schema\Platinum.Schema.nuspec" />
        <XmlPoke XmlInputPath="src\Platinum.Schema\Platinum.Schema.nuspec"
                 Query="/package/metadata/version"
                 Value="$(Version)" />

        <!-- Packing -->
        <MakeDir Directories="build" />
        <Exec Command=" nuget pack Platinum.Core.csproj $(nugetArgs) " WorkingDirectory="src\Platinum.Core" />
        <Exec Command=" nuget pack Platinum.Data.csproj $(nugetArgs) " WorkingDirectory="src\Platinum.Data" />
        <Exec Command=" nuget pack Platinum.Database.csproj $(nugetArgs) " WorkingDirectory="src\Platinum.Database" />
        <Exec Command=" nuget pack Platinum.Logging.csproj $(nugetArgs) " WorkingDirectory="src\Platinum.Logging" />
        <Exec Command=" nuget pack Platinum.Metrics.csproj $(nugetArgs) " WorkingDirectory="src\Platinum.Metrics" />
        <Exec Command=" nuget pack Platinum.Mock.csproj $(nugetArgs) " WorkingDirectory="src\Platinum.Mock" />
        <Exec Command=" nuget pack Platinum.Validation.csproj $(nugetArgs) " WorkingDirectory="src\Platinum.Validation" />
        <Exec Command=" nuget pack Platinum.Validation.Javascript.csproj $(nugetArgs) " WorkingDirectory="src\Platinum.Validation.Javascript" />
        <Exec Command=" nuget pack Platinum.Schema.nuspec -OutputDirectory ..\..\build " WorkingDirectory="src\Platinum.Schema" />
    </Target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ~ 
    ~ push/
    ~ Pushes the recently built packages to Nuget server.
    ~ 
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <Target Name="push">
        <Error Condition=" $(nugetPushKey) == '' " Text="Must specify 'nugetPushKey' when pushing to nuget source." />
        <Exec Command=" nuget push Platinum.Core.$(Version).nupkg -s $(nugetSource) $(nugetPushKey) " WorkingDirectory="build" />
        <Exec Command=" nuget push Platinum.Data.$(Version).nupkg -s $(nugetSource) $(nugetPushKey) " WorkingDirectory="build" />
        <Exec Command=" nuget push Platinum.Database.$(Version).nupkg -s $(nugetSource) $(nugetPushKey) " WorkingDirectory="build" />
        <Exec Command=" nuget push Platinum.Logging.$(Version).nupkg -s $(nugetSource) $(nugetPushKey) " WorkingDirectory="build" />
        <Exec Command=" nuget push Platinum.Metrics.$(Version).nupkg -s $(nugetSource) $(nugetPushKey) " WorkingDirectory="build" />
        <Exec Command=" nuget push Platinum.Mock.$(Version).nupkg -s $(nugetSource) $(nugetPushKey) " WorkingDirectory="build" />
        <Exec Command=" nuget push Platinum.Schema.$(Version).nupkg -s $(nugetSource) $(nugetPushKey) " WorkingDirectory="build" />
        <Exec Command=" nuget push Platinum.Validation.$(Version).nupkg -s $(nugetSource) $(nugetPushKey) " WorkingDirectory="build" />
        <Exec Command=" nuget push Platinum.Validation.Javascript.$(Version).nupkg -s $(nugetSource) $(nugetPushKey) " WorkingDirectory="build" />
    </Target>


    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ~ 
    ~ build-vs/
    ~ Build the Visual Studio plugin. Will also automatically update
    ~ our local copy of the binaries :-)
    ~ 
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <Target Name="build-vs" DependsOnTargets="_version">
        <!-- Deps -->
        <Exec Command=" nuget restore Platinum.VisualStudio.sln " />

        <!-- Specific versioning -->
        <XmlPoke Namespaces="&lt;Namespace Prefix='vs' Uri='http://schemas.microsoft.com/developer/vsx-schema/2011' /&gt;"
                 Query=" /vs:PackageManifest/vs:Metadata/vs:Identity/@Version "
                 XmlInputPath="src\Platinum.VisualStudio.Plugin\source.extension.vsixmanifest"
                 Value="$(Version)" />
        <Exec Command=" bin\xmltidy.exe src\Platinum.VisualStudio.Plugin\source.extension.vsixmanifest " />

        <!-- Compile -->
        <MSBuild Projects="Platinum.VisualStudio.sln" Properties="Configuration=Release" />

        <!-- Packing -->
        <Copy SourceFiles="src\Platinum.VisualStudio\bin\Release\Platinum.VisualStudio.dll" DestinationFolder="bin" />
        <Copy SourceFiles="src\Platinum.VisualStudio.Command\bin\Release\ptvscmd.exe"       DestinationFolder="bin" />

        <!-- Plugin -->
        <Copy SourceFiles="src\Platinum.VisualStudio.Plugin\bin\Release\Platinum.VisualStudio.Plugin.vsix"
              DestinationFiles="build\Platinum.VisualStudio.Plugin.$(version).vsix" />
    </Target>

</Project>